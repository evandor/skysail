template(entity, name, package, appName, appPkg, addEntity, imports) ::= <<
package $entity.packageName$;

import javax.annotation.Generated;
import java.util.List;

import io.skysail.api.doc.*;
import io.skysail.api.links.Link;
import io.skysail.domain.core.repos.DbRepository;
import io.skysail.server.restlet.resources.PostEntityServerResource;
import io.skysail.server.ResourceContextId;

import $entity.basePackage$.$entity.applicationName$;

$entity.classAnnotations$
public class Post$entity.simpleName$Resource extends PostEntityServerResource<$entity.simpleName$> {

	private $entity.applicationName$ app;
    private DbRepository repository;

	public Post$entity.simpleName$Resource() {
	    addToContext(ResourceContextId.LINK_TITLE, "Create new $entity.simpleName$");
    }

    @Override
	protected void doInit() {
		app = ($entity.applicationName$)getApplication();
        repository = (DbRepository) app.getRepository($entity.simpleName$.class);
	}

	@Override
    @ApiSummary("summary")
    @ApiDescription("desc")
    @ApiTags("tag")
    public $entity.simpleName$ createEntityTemplate() {
	    return new $entity.simpleName$();
    }

    @Override
    @ApiSummary("summary")
    @ApiDescription("desc")
    @ApiTags("tag")
    public void addEntity($entity.simpleName$ entity) {
        String id = repository.save(entity, app.getApplicationModel()).toString();
        entity.setId(id);
    }
    
    @Override
	public List<Link> getLinks() {
		return super.getLinks($entity.links$);
	}

	@Override
	public String redirectTo() {
	    return super.redirectTo($entity.simpleName$sResource.class);
	}
}
>>